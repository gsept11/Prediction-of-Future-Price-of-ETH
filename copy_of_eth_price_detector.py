# -*- coding: utf-8 -*-
"""Copy of ETH_price detector.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1F1CKPOE7Z7xGq3F-YFasCUNpslM12mdK
"""

#Description: This program attempts to predict the future price of ETH

import pandas as pd
import numpy as np
from sklearn.svm import SVR
import matplotlib.pyplot as plt
plt.style.use('fivethirtyeight')

#Load the ETH data
from google.colab import files
files.upload()

#Read in the data
df = pd.read_csv('ETH_USD (2).csv')
#Set the date as the index
df = df.set_index(pd.DatetimeIndex(df['Date'].values))
#Show the data
df

future_days = 5

#Create a new column
df[str(future_days)+ '_Day_Price_Forecast' ] = df[['Close']].shift(-future_days)
#Show the data
df[['Close', str(future_days)+ '_Day_Price_Forecast' ]]

X = np.array(df[['Close']])
X = X[:df.shape[0] - future_days]
print(X)

y = np.array(df[str(future_days)+ '_Day_Price_Forecast'])
y = y[:-future_days]
print(y)

#Spilt the data
from sklearn.model_selection import train_test_split
x_train, x_test, y_train, y_test = train_test_split(X,y, test_size = 0.2)

from sklearn.svm import SVR
svr_rbf= SVR(kernel= 'rbf', C=1e3, gamma=0.00001)
svr_rbf.fit(x_train, y_train)

svr_rbf_confidence = svr_rbf.score(x_test, y_test)
print('svr_rbf accuracy:', svr_rbf_confidence)

svm_prediction = svr_rbf.predict(x_test)
print(svm_prediction)

print(y_test)

plt.figure(figsize=(12,4))
plt.plot(svm_prediction, label = 'Prediction', lw=2, alpha=.7)
plt.plot(y_test, label = 'Actual', lw=2, alpha=.7)
plt.title('Predection vs Actual')
plt.ylabel('Price in USD')
plt.xlabel('Time')
plt.legend()
plt.xticks(rotation=0)
plt.show()